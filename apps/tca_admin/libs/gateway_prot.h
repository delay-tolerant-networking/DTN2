/*
 *    Copyright 2006 Intel Corporation
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _GATEWAY_PROT_H_RPCGEN
#define _GATEWAY_PROT_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


enum bamboo_stat {
        BAMBOO_OK = 0,
        BAMBOO_CAP = 1,
        BAMBOO_AGAIN = 2,
};
typedef enum bamboo_stat bamboo_stat;

typedef char bamboo_key[20];

typedef struct {
        u_int bamboo_value_len;
        char *bamboo_value_val;
} bamboo_value;

typedef struct {
        u_int bamboo_placemark_len;
        char *bamboo_placemark_val;
} bamboo_placemark;

struct bamboo_put_args {
        char *application;
        char *client_library;
        bamboo_key key;
        bamboo_value value;
        int ttl_sec;
};
typedef struct bamboo_put_args bamboo_put_args;

struct bamboo_get_args {
        char *application;
        char *client_library;
        bamboo_key key;
        int maxvals;
        bamboo_placemark placemark;
};
typedef struct bamboo_get_args bamboo_get_args;

struct bamboo_get_res {
        struct {
                u_int values_len;
                bamboo_value *values_val;
        } values;
        bamboo_placemark placemark;
};
typedef struct bamboo_get_res bamboo_get_res;

#define BAMBOO_DHT_GATEWAY_PROGRAM 708655600
#define BAMBOO_DHT_GATEWAY_VERSION 2

#if defined(__STDC__) || defined(__cplusplus)
#define BAMBOO_DHT_PROC_NULL 1
extern  void * bamboo_dht_proc_null_2(void *, CLIENT *);
extern  void * bamboo_dht_proc_null_2_svc(void *, struct svc_req *);
#define BAMBOO_DHT_PROC_PUT 2
extern  bamboo_stat * bamboo_dht_proc_put_2(bamboo_put_args *, CLIENT *);
extern  bamboo_stat * bamboo_dht_proc_put_2_svc(bamboo_put_args *, struct svc_req *);
#define BAMBOO_DHT_PROC_GET 3
extern  bamboo_get_res * bamboo_dht_proc_get_2(bamboo_get_args *, CLIENT *);
extern  bamboo_get_res * bamboo_dht_proc_get_2_svc(bamboo_get_args *, struct svc_req *);
extern int bamboo_dht_gateway_program_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define BAMBOO_DHT_PROC_NULL 1
extern  void * bamboo_dht_proc_null_2();
extern  void * bamboo_dht_proc_null_2_svc();
#define BAMBOO_DHT_PROC_PUT 2
extern  bamboo_stat * bamboo_dht_proc_put_2();
extern  bamboo_stat * bamboo_dht_proc_put_2_svc();
#define BAMBOO_DHT_PROC_GET 3
extern  bamboo_get_res * bamboo_dht_proc_get_2();
extern  bamboo_get_res * bamboo_dht_proc_get_2_svc();
extern int bamboo_dht_gateway_program_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_bamboo_stat (XDR *, bamboo_stat*);
extern  bool_t xdr_bamboo_key (XDR *, bamboo_key);
extern  bool_t xdr_bamboo_value (XDR *, bamboo_value*);
extern  bool_t xdr_bamboo_placemark (XDR *, bamboo_placemark*);
extern  bool_t xdr_bamboo_put_args (XDR *, bamboo_put_args*);
extern  bool_t xdr_bamboo_get_args (XDR *, bamboo_get_args*);
extern  bool_t xdr_bamboo_get_res (XDR *, bamboo_get_res*);

#else /* K&R C */
extern bool_t xdr_bamboo_stat ();
extern bool_t xdr_bamboo_key ();
extern bool_t xdr_bamboo_value ();
extern bool_t xdr_bamboo_placemark ();
extern bool_t xdr_bamboo_put_args ();
extern bool_t xdr_bamboo_get_args ();
extern bool_t xdr_bamboo_get_res ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_GATEWAY_PROT_H_RPCGEN */
