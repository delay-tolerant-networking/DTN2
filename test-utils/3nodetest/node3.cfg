#
# dtn.conf
#
# Default configuration file for Internet-connected DTN nodes. The
# daemon uses a tcl interpreter to parse this file, thus any standard
# tcl commands are valid, and all settings are get/set using a single
# 'set' functions as: <module> set <var> <val?>
#

#
# <*** Change these test parameters for your configuration ***>
# this is for node3 - the final destination
#
set node "node3"
set node1_ip "192.168.1.1"
set node2_ip "192.168.1.2"
set node3_ip "192.168.1.3"
set dbdir "/var/dtn"



log /dtnd info "dtnd parsing configuration..."

########################################
#
# Daemon Console Configuration
#
########################################

#
# console set stdio [ true | false ]
#
# If set to false, disable the interactive console on stdin/stdout.
# The default is set to true (unless the dtnd process is run as a
# daemon).
#
# console set stdio false

#
# console set addr <port>
# console set port <port>
#
# Settings for the socket based console protocol.
# (this interprets user commands)
#
console set addr 127.0.0.1
console set port 5050

#
# console set prompt <prompt>
#
# Set the prompt string.  Helps if running multiple dtnd's
#
##set shorthostname [lindex [split [info hostname] .] 0]
set shorthostname ${node}
console set prompt "$shorthostname dtn% "

########################################
#
# Storage Configuration
#
########################################

#
# storage set type [ berkeleydb | postgres | mysql  | external ]
#
# Set the storage system to be used
#
storage set type berkeleydb

# the following are for use with external data stores
#
# The server port to connect to (on localhost)
# Note that 62345 has no special significance -- chosen randomly
storage set server_port 62345

# The external data store schema location, which can be
# found in dtn2/oasys/storage/DS.xsd.
storage set schema /etc/DS.xsd


#
# Do a runtime check for the standard locations for the persistent
# storage directory
#
file mkdir ${dbdir}
if {! [file isdirectory ${dbdir}]} {
    puts stderr "Must create ${dbdir} storage directory"
    exit 1
}

#
# storage set payloaddir <dir>
#
# Set the directory to be used for bundle payload files
#
storage set payloaddir ${dbdir}/bundles

#
# storage set dbname <db>
#
# Set the database name (appended with .db as the filename in berkeley
# db, used as-is for SQL variants
#
storage set dbname     DTN

#
# storage set dbdir    <dir>
#
#
# When using berkeley db, set the directory to be used for the
# database files and the name of the files and error log.
#
storage set dbdir      ${dbdir}/db

#
# database transactions
#
storage set db_txn true

#
# When using berkeley db, turn this flag on to keep the
# transaction logs from filling up the partition
#
#storage set db_log_auto_removal true

#
# default delay between database updates is 10 milliseconds
#
#storage set interval 10

#
# specify the payload_quota (bytes)
#
storage set payload_quota 2000000000

########################################
#
# Routing configuration
#
########################################

#
# Set the algorithm used for dtn routing.
#
# route set type [static | flood | neighborhood | linkstate | external]
#
route set type static

#
# route local_eid <eid>
#
# Set the local administrative id of this node. The default just uses
# the internet hostname plus the appended string ".dtn" to make it
# clear that the hostname isn't really used for DNS lookups.
#
##route local_eid "dtn://${shorthostname}.dtn"
route local_eid "dtn://${node}.dtn"

#
# route local_eid_ipn <eid>
#
# Set the local administrative ipn:x.0 style id of this node 
# to take advantage of CBHE compression when working with ipn:
# destined bundles
#
#route local_eid_ipn ipn:81.0

#
# External router specific options
#
# route set server_port 8001
# route set hello_interval 30
# route set schema "/etc/router.xsd"

########################################
#
# TCP convergence layer configuration
#
########################################

#
# interface add [name] [CL]
#
# Add an input interface to listen on addr:port for incoming bundles
# from other tcp / udp convergence layers
#
# For IP-based interfaces, interfaces listen on INADDR_ANY port 4556
# by default. These can be overridden by using the local_addr and/or
# local_port arguments.
interface add tcp0 tcp
interface add udp0 udp

#
# link add <name> <nexthop> <type> <clayer> <args...>
#
# Add a link to a peer node.
# 
# For IP-based links (tcp or udp), the nexthop should contain a DNS
# hostname or IP address, followed optionally by a : and a port. If
# the port is not specified, the default of 4556 is used.
#
# e.g.  link add link1 dtn.dtnrg.org ONDEMAND tcp
#       link add link2 dtn2.dtnrg.org:10000 ONDEMAND tcp
link add null /dev/null ALWAYSON null
#
# add the link for the hop to node2
link add node2_link ${node2_ip}:4556 ALWAYSON tcp

#
# route add <dest> <link|peer>
#
# Add a route to the given bundle endpoint id pattern <dest> using the
# specified link name or peer endpoint.
#
# e.g. route add dtn://host.domain/* tcp0
#
# We want all traffic to node1 to be routed through node2 in this test
#    <*** change this to match your configuration ***>
route add dtn://node2.dtn/* node2_link
route add dtn://node1.dtn/* node2_link

########################################
#
# Service discovery
#
########################################

#
# discovery add <name> <af> <opts...>
# discovery announce <cl_name> <discovery_name> <cl_type> <opts...>
#
# Add a local neighborhood discovery module
#
# e.g. discovery add discovery_bonjour bonjour

########################################
#
# Parameter Tuning
#
########################################

#
# Set the size threshold for the daemon so any bundles smaller than this
# size maintain a shadow copy in memory to minimize disk accesses. 
#
# param set payload_mem_threshold 16384

#
# Test option to keep all bundle files in the filesystem, even after the
# bundle is no longer present at the daemon.
#
# param set payload_test_no_remove true

#
# Set the size for which the tcp convergence layer sends partial reception
# acknowledgements. Used with reactive fragmentation
#
# param set tcpcl_partial_ack_len 4096

#  param set data_timeout 60
#
# Set if bundles are automatically deleted after transmission
#
# param set early_deletion true

# (others exist but are not fully represented here)

param set link_min_retry_interval 5

param set link_max_retry_interval 15

param set early_deletion true

log /dtnd info "dtnd configuration parsing complete"

# Rotate the log every 86400 seconds (1 day)
# the initial call to rotate (after the proc) is required to
# start the proc running every 1 day
#proc rotate {} {
#    set date [ clock format [ clock seconds ] -format "%Y-%m-%d-%H-%M-%S" ]
#    set new "/pdss/dtn/dtn.$date.log"
#    file rename "/pdss/dtn/dtn.log" $new
#
#    log rotate
#
#    after 86400000 rotate
#}
#rotate

## emacs settings to use tcl-mode by default
## Local Variables: ***
## mode:tcl ***
## End: ***
