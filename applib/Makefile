#
#    Copyright 2004-2006 Intel Corporation
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

#
# Makefile for DTN2/applib
#

# Source files generated by rpcgen
XDRSRCS        := dtn_types_xdr.c

# Sources for the simple client side of the library
CLIENTLIB_SRCS := 			\
		$(XDRSRCS)		\
		dtn_api.c		\
		dtn_errno.c		\
		dtn_ipc.c		\
		sdnv-c.c		\

# Sources for the client-side library that depend on liboasys
CLIENT_EXTRA_SRCS :=			\
		APIEndpointIDOpt.cc	\

# Sources for the server side of the library
SERVERLIB_SRCS := 			\
		$(XDRSRCS)		\
		APIServer.cc		\
		dtn_errno.c		\
		dtn_ipc.c		\

CLIENTLIB_OBJS := $(CLIENTLIB_SRCS:.c=.o)
CLIENTLIB_OBJS := $(CLIENTLIB_OBJS:.cc=.o)
CLIENTLIB_OBJS := $(CLIENTLIB_OBJS) ../dtn-version.o

CLIENT_EXTRA_OBJS := $(CLIENT_EXTRA_SRCS:.c=.o)
CLIENT_EXTRA_OBJS := $(CLIENT_EXTRA_OBJS:.cc=.o)

SERVERLIB_OBJS := $(SERVERLIB_SRCS:.c=.o)
SERVERLIB_OBJS := $(SERVERLIB_OBJS:.cc=.o)

ALLSRCS := $(CLIENTLIB_SRCS) $(CLIENT_EXTRA_SRCS) $(SERVERLIB_SRCS)

#
# Default target is to build the three libraries
#
all: libs

#
# rpcgen emits code that has unused variables, so we can't use our
# normally stringent warnings
#
%_xdr.o: %_xdr.c
	@rm -f $@; mkdir -p $(@D)
	$(CC) $(CPPFLAGS) $(CFLAGS_NOWARN) -c $< -o $@

#
# Make sure SRCDIR is set (.. by default)
#
ifeq ($(SRCDIR),)
SRCDIR   := ..
BUILDDIR := ..
endif

#
# Include the common rules and the version rules
#
include ../Rules.make
include $(SRCDIR)/dtn-version.mk

#
# When dtn_types.x changes, we now manually rebuild dtn_types.h and
# dtn_types_xdr.c
#
.PHONY: xdrs
xdrs:
	-$(RM) -f dtn_types.h dtn_types_xdr.c
	rpcgen -h dtn_types.x -o dtn_types.h
	rpcgen -c dtn_types.x -o dtn_types_xdr.c

#
# SWIG Rules
#
.PHONY: swig
swig: 
	swig -c++ -tcl    -w302          -o dtn_api_wrap_tcl.cc    dtn_api.i
	swig -c++ -python -w302 -classic -o dtn_api_wrap_python.cc dtn_api.i

libdtntcl-$(DTN_VERSION).$(SHLIB_EXT): dtn_api_wrap_tcl.o libdtnapi-$(DTN_VERSION).$(SHLIB_EXT)
	$(CXX) $(CXXFLAGS) $< $(LDFLAGS_SHLIB) $(LDFLAGS) \
		-ldtnapi-$(DTN_VERSION) $(TCL_LDFLAGS) -o $@

# Add rules for python, but don't build by default for now
ifeq ($(BUILD_SYSTEM),Darwin)
PYTHON_FLAGS := -I /Library/Frameworks/Python.framework/Headers -framework Python 
endif
libdtnpy-$(DTN_VERSION).$(SHLIB_EXT): dtn_api_wrap_python.o
	$(CXX) $(CXXFLAGS) $(PYTHON_FLAGS) $^ $(LDFLAGS_SHLIB) $(LDFLAGS) \
		-ldtnapi$(DTN_VERSION) -o $@

#
# Linking rules for the libraries.
#
libdtnapi-$(DTN_VERSION).a: $(CLIENTLIB_OBJS)
	rm -f $@
	$(AR) ruc $@ $^
	$(RANLIB) $@ || true

libdtnapi-$(DTN_VERSION).$(SHLIB_EXT): $(CLIENTLIB_OBJS)
	rm -f $@
	$(CXX) $(CXXFLAGS) $^ $(LDFLAGS_SHLIB) $(LDFLAGS) -o $@

libdtnapi++-$(DTN_VERSION).a: $(CLIENT_EXTRA_OBJS)
	rm -f $@
	$(AR) ruc $@ $^
	$(RANLIB) $@ || true

libdtnapi++-$(DTN_VERSION).$(SHLIB_EXT): $(CLIENT_EXTRA_OBJS) libdtnapi.a
	rm -f $@
	$(CXX) $(CXXFLAGS) $^ $(LDFLAGS_SHLIB) -L../oasys -loasys libdtnapi.a $(LDFLAGS) -o $@

libdtnapisrv.a: $(SERVERLIB_OBJS)
	rm -f $@
	$(AR) ruc $@ $^
	$(RANLIB) $@ || true

# Generate symbolic links to the versioned libraries
lib%.a : lib%-$(DTN_VERSION).a
	rm -f $@
	ln -s $< $@

lib%.$(SHLIB_EXT) : lib%-$(DTN_VERSION).$(SHLIB_EXT)
	rm -f $@
	ln -s $< $@

#
# Generate the list of files that is built by default
#
LIBFILES = libdtnapi.a libdtnapi-$(DTN_VERSION).a libdtnapi++.a libdtnapi++-$(DTN_VERSION).a libdtnapisrv.a 
ifeq ($(SHLIBS),yes)
LIBFILES += libdtnapi.$(SHLIB_EXT) libdtnapi-$(DTN_VERSION).$(SHLIB_EXT) 
LIBFILES += libdtnapi++.$(SHLIB_EXT) libdtnapi++-$(DTN_VERSION).$(SHLIB_EXT)
LIBFILES += libdtntcl.$(SHLIB_EXT) libdtntcl-$(DTN_VERSION).$(SHLIB_EXT)
endif

libs: $(LIBFILES)
