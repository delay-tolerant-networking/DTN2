#!/bin/sh
#
# IMPORTANT:  READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
# By downloading, copying, installing or using the software you agree to this 
# license.  If you do not agree to this license, do not download, install,
# copy or use the software.
#
# Copyright (c) 2003, The MITRE Corporation
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are 
# met:
# 
# Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.  Redistributions 
# in binary form must reproduce the above copyright notice, this list of 
# conditions and the following disclaimer in the documentation and/or 
# other materials provided with the distribution.
# 
# Neither the name of The MITRE Corporation nor the names of its 
# contributors may be used to endorse or promote products derived from 
# this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS 
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# $Id$
#

#
# Before anything else, check for configure --verbose
#
for ac_option do
   case "$ac_option" in
   -verbose | --verbose | -v)
      set -x
      break
      ;;
   esac
done

##############
#
# CFLAGS
##############
#
#

#########
#
# TARGET
#########
#
# native
# 
# cerfcube (or arm)
#

target=native

exec_prefix='/usr/local/DTN'
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libdir='${exec_prefix}/lib'
incdir='${exec_prefix}/include'
mandir='/usr/local/man/manl'
static=''
allstatic=''

#
# Defaults
#
cc='gcc'
depflags=''
make_static='n'
debug='-g'
# optimize='-O'
# optimizewarn='-Wuninitialized' # depends on -O
optimize=''
optimizewarn=''

#
# External libraries
#
incdirs=
libdirs=
libs=
staticlibs=''

tclver='8.3'
tcldir=''
tclincdir=''
tcllibdir=''
tcllib=''

db_enabled='true'
dbver='4.2'
dbdir=''
dbincdir=''
dblibdir=''
dblib=''

sql_enabled='true'

postgres_enabled='true'
postgresdir=''
postgresincdir=''
postgreslibdir=''
postgreslib=''

mysql_enabled='true'
mysqldir=''
mysqlincdir=''
mysqllibdir=''
mysqllib=''

pthreadincdir=''
pthreadlibdir=''
pthreadlib='-lpthread'
pthreadstaticlib=''

#
# Parse user options
#
ac_prev=
for ac_option
do
  if  test -n "$ac_prev"; then
      eval "$ac_prev=\$ac_option"
      ac_prev=
      continue
  fi

  case "$ac_option" in
  -*=*) ac_optarg=`echo "$ac_option" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) ac_optarg= ;;
  esac

  case "$ac_option" in
  -verbose | --verbose | -v)
     ;;
  -target | --target | -t)
    ac_prev=target ;;
  -target=* | --target=* | -t=*)
    target="$ac_optarg" ;;

  -static | --static)
    make_static=y ;;
  -dynamic | --dynamic)
    make_static=n ;;

  -exec-prefix | --exec-prefix | -ep)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec-prefix=* | -ep=*)
    exec_prefix="$ac_optarg" ;;

  -mandir | --mandir | -md)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | -md=*)
    mandir="$ac_optarg" ;;

  -enable-debug | --enable-debug)
    debug='-g' ;;
  -disable-debug | --disable-debug)
    debug='' ;;

  -enable-optimize | --enable-optimize)
    optimize='-O'
    optimizewarn='-Wuninitialized'
    ;;
  -disable-optimize | --disable-optimize)
    optimize='' 
    optimizewarn=''
    ;;

  -with-gcc | --with-gcc | -with-cc | --with-cc)
    ac_prev=with-cc ;;
  -with-gcc=* | --with-gcc=* | -with-cc=* | --with-cc=*)
    cc="$ac_optarg" ;;

  -with-tcl | --with-tcl)
    ac_prev=with-tcl ;;
  -with-tcl=* | --with-tcl=*)
    tcldir="$ac_optarg" ;;

  -with-tclver | --with-tclver)
    ac_prev=with-tclver ;;
  -with-tclver=* | --with-tclver=*)
    tclver="$ac_optarg" ;;

  -with-db | --with-db)
    ac_prev=with-db ;;
  -with-db=* | --with-db=*)
    dbdir="$ac_optarg" ;;

  -with-dbver | --with-dbver)
    ac_prev=with-dbver ;;
  -with-dbver=* | --with-dbver=*)
    dbver="$ac_optarg" ;;

  -with-postgres | --with-postgres)
    ac_prev=with-postgres ;;
  -with-postgres=* | --with-postgres=*)
    postgresdir="$ac_optarg" ;;

  -with-mysql | --with-mysql)
    ac_prev=with-mysql ;;
  -with-mysql=* | --with-mysql=*)
    mysqldir="$ac_optarg" ;;

  -with-capriccio-pthread | --with-capriccio-pthread)
    ac_prev=with-capriccio-pthread ;;
  -with-capriccio-pthread=* | --with-capriccio-pthread=*)
    capriccio=y
    capricciodir="$ac_optarg" ;;

  -help | --help | -h)
    cat <<EOF
Usage: configure [options]
Options [defaults in brackets after descriptions]
Directory and file names:
  --exec-prefix=EPREFIX           install architecture-independent files in PREFIX
                                  [$exec_prefix]
  --target=TARGET                 Configure for TARGET.  Valid targets are 'native'
                                  and 'arm' [$target]
  --static                        Build static objects; do not use dynamic link libraries
  --mandir=MANUAL_DIR             Install man pages here [$mandir]
Features
     debug			  Include '-g' in the CFLAGS.
     optimize			  Include '-O' in the CFLAGS.

  --disable-FEATURE
  --enable-FEATURE[=ARG]
Packages
  --with-cc=GCC			  Version of the C/C++ compiler to use
  --with-db=DIR			  Location of a Berkeley DB installation (or none)
  --with-postgres=DIR		  Location of a Postgres  installation (or none)
  --with-mysql=DIR		  Location of a Mysql installation (or none)
  --with-tcl=DIR		  Location of a tcl installation (default system)
  --with-capriccio-pthread=DIR	  Location of capriccio pthreads installation
EOF
  exit 0
  ;;
  *)
    cat <<EOF
configure: unrecognized option \`$ac_option'.
Try \`configure --help' for more information.
EOF
  exit 1
  ;;
  esac
done

# XXX/demmer at least temporarily, run configure in oasys as well
if [ ! -f oasys/Rules.make ]; then
    echo "Configuring oasys library..."
    (cd oasys && ./configure $*)
fi

#
# Make sure the compiler a) works b) is some gcc variant and c) is an
# acceptable version.
#
if [ $target = "native" ]; then

cat > config.$$.c <<EOF
#include <stdio.h>
int 
main(int argc, const char** argv) {
    printf("%d.%d", __GNUC__, __GNUC_MINOR__);
}
EOF
$cc config.$$.c > /dev/null 2> /dev/null
if [ $? != 0 -o ! -f ./a.out ]; then
    echo "error: non-functional or non-gnu compiler $cc"
    exit 1
fi

rm -f config.$$.c

ccver=`./a.out`
rm -f ./a.out

elif [ "$target" = "arm" ]; then
ccver=2.95
mysql_enabled='false'
postgres_enabled='false'
fi

#
# Now set some options based on the compiler version
#
case "$ccver" in
    #
    # for gcc 2.9.X and 3.1, the auto-dependency features don't work, and 
    # _GNU_SOURCE isn't defined, so do both those things here
    #
    3.1|2.9*)
        defs="$defs -D_GNU_SOURCE"
	depflags=''
	echo "*** warning: using old compiler $cc version $ccver,"
	echo "             automatic dependency generation will not work"
	;;
    #
    # For later 3.X, use auto-dependency flags
    #
    3.*)
	depflags='-MMD -MP -MT "$*.o $*.E $*.po"'
	;;
    *)
	echo "error: unsupported compiler version $ccver"
	exit 1
	;;
esac

#
# assume that if we're using gcc-xxx, we also want g++-xxx
#
cpp=`echo $cc | sed 's/cc/++/'`

case "$make_static" in
    yes | y | true | t)
    static="-static"
    allstatic="-all-static"
    libext=a
    ;;

    *)
    libext=so
    ;;
esac

#
# Find the tcl library
#
if [ ! "$tcldir" = "" ]; then
  #
  # Make sure the directory the user specified is ok
  #
  if [ -r $tcldir/include/tcl.h ]; then
	tclincdir=-I$tcldir/include
  else
	echo "can't find tcl.h in $tcldir"
	exit 1
  fi

  if   [ -r $tcldir/lib/libtcl.$libext ]; then
	tcllibdir=-L$tcldir/lib
	tcllib=-ltcl
  elif [ -r $tcldir/lib/libtcl$tclver.$libext ]; then
	tcllibdir=-L$tcldir/lib
	tcllib=-ltcl$tclver
  else
	echo "can't find libtcl.$libext or libtcl$tclver.$libext in $tcldir"
	exit 1
  fi

else
  #
  # Try to find a system installation
  #
  if [ -r /usr/include/tcl.h ]; then
	tclincdir=
  elif [ -r /usr/include/tcl$tclver/tcl.h ]; then
	tclincdir=-I/usr/include/tcl$tclver
  else
	echo "can't find usable tcl.h"
	exit 1
  fi

  if   [ -r /usr/lib/libtcl.$libext ]; then
	tcllib=-ltcl
  elif [ -r /usr/lib/libtcl$tclver.$libext ]; then
	tcllib=-ltcl$tclver
  else
	echo "can't find usable libtcl.$libext"
	exit 1
  fi
fi

#
# Find the berkeley db library (version 4.2)
#

#
# check if the user doesn't want berkeley db at all
#
if [ "$dbdir" = "none" ]; then
    db_enabled='false'
#
# check the supplied directory if the user gave us one
#
elif [ "$dbdir" != "" ]; then
    if [ -r $dbdir/include/db.h -a -r $dbdir/include/db_cxx.h ] ; then
        dbincdir=-I$dbdir/include
    else
	echo "can't find db.h and/or db_cxx.h in $dbdir/include"
	exit 1
    fi

    if [ -r $dbdir/lib/libdb-$dbver.$libext -a \
         -r $dbdir/lib/libdb_cxx-$dbver.$libext ] ; 
    then
	dblibdir=-L$dbdir/lib
	dblib="-ldb-$dbver -ldb_cxx-$dbver"
    else
	echo "can't find libdb-$dbver.$libext and/or libdb_cxx-$dbver.$libext"\
	     "in $dbdir/lib"
	exit 1
    fi
#
# otherwise, check for a system installation
#
else
    dbincdirs="/usr/include /usr/local/BerkeleyDB.$dbver/include"
    dblibdirs="/usr/lib /usr/local/BerkeleyDB.$dbver/lib"

    found=0
    for dir in $dbincdirs; do
    	if [ -r $dir/db.h -a -r $dir/db_cxx.h ]
    	then
	    grep DB_VERSION_STRING $dir/db.h | grep $dbver >/dev/null
	    if [ $? = 0 ]; then
		if [ $dir != "/usr/include" ]; then
		    dbincdir=-I$dir
		fi
		found=1
        	break
 	    fi
	fi
    done

    if [ "$found" = "0" ]; then
       echo "can't find db.h and/or db_cxx.h in include directories"\
	    "(tried $dbincdirs)"
       exit 1
    fi

    found=0
    for dir in $dblibdirs; do
	if [ -r $dir/libdb-$dbver.$libext -a  \
	     -r $dir/libdb_cxx-$dbver.$libext ]
	then
	    if [ $dir != "/usr/lib" ]; then
	    	dblibdir=-L$dir
            fi
 	    dblib="-ldb-$dbver -ldb_cxx-$dbver"
	    found=1
	    break
        fi
    done
    if [ "$found" = "0" ]; then
 	echo "can't find libdb-$dbver.$libext and/or libdb_cxx-$dbver.$libext"\
	     "in lib directories (tried $dblibdirs)"
 	exit 1
    fi
fi

if [ $target == "arm" -o $target == "cerfcube" -o $target == "arm+apps" ]; then
    # XXX/demmer is this really needed???
	exec_prefix=`pwd`/Stage
	bindir='${exec_prefix}/bin'
	sbindir='${exec_prefix}/sbin'
	libdir='${exec_prefix}/lib'
	mandir='${exec_prefix}/man/manl'
	idir='${exec_prefix}/include'
	cflags='-g -Wall -DUSE_DB -DDB_PKG_SLEEPYCAT_$db_version -D_REENTRANT'
fi



#
# Find the postgres dlibrary
#
#
if [ "$postgresdir" = "none" ]; then
  postgres_enabled='false'
else
  postgreslib="-lpq"
  if [ ! "$postgresdir" = "" ]; then
	  #
	  # check the supplied directory
	  #
	  postgresincdir=$postgresdir/include/
	  if   [ ! -r $postgresincdir/libpq-fe.h ] ; then
		echo "can't find libpq.h in $postgresincdir"
	  	exit 1
	  else
	      postgresincdir=-I$postgresincdir
	  fi

	  postgreslibdir=$postgresdir/lib
	  if   [ ! -r $postgreslibdir/libpq.$libext ] ; then
		echo "can't find libpq.$libext in $postgreslibdir"
	  	exit 1
	  else
		postgreslibdir=-L$postgreslibdir
	  fi
   else
	#
	# try to find a system installation
	#
        if   [ -r /usr/include/libpq-fe.h ]; then
		postgresincdir=

	elif   [ -r /usr/include/postgresql/libpq-fe.h ]; then
		postgresincdir=-I/usr/include/postgresql

	elif [ -r /usr/local/pgsql/include/libpq-fe.h ]; then
		postgresincdir=-I/usr/local/pgsql/include

	else
		echo "can't find libpq-fe.h"
		exit 1
	fi

 	if   [ -r /usr/lib/libpq.$libext ]; then
 		postgreslibdir=
	elif [ -r /usr/lib/pgsql/libpq.$libext ]; then
 		postgreslibdir=-L/usr/lib/pgsql
 	elif [ -r /usr/local/pgsql/lib/libpq.$libext ]; then
 		postgreslibdir=-L/usr/local/pgsql/lib
 	else
 		echo "can't find libpq.$libext"
 		exit 1
 	fi
   fi
fi

#
# Find the mysql dlibrary
#
#
if [ "$mysqldir" = "none" ]; then
  mysql_enabled='false'
else
  mysqllib="-lmysqlclient"
  if [ ! "$mysqldir" = "" ]; then
	  #
	  # check the supplied directory
	  #
	  mysqlincdir=$mysqldir/include/
	  if   [ ! -r $mysqlincdir/mysql.h ] ; then
		echo "can't find mysql.h in $mysqlincdir"
	  	exit 1
	  else
	      mysqlincdir=-I$mysqlincdir
	  fi

	  mysqllibdir=$mysqldir/lib
	  if   [ ! -r $mysqllibdir/libmysqlclient.$libext ] ; then
		echo "can't find libmysqlclient.$libext in $mysqllibdir"
	  	exit 1
	  else
		mysqllibdir=-L$mysqllibdir
	  fi
   else
	#
	# try to find a system installation
	#
        if   [ -r /usr/include/mysql.h ]; then
	    mysqlincdir=

	elif   [ -r /usr/include/mysql/mysql.h ]; then
		mysqlincdir=-I/usr/include/mysql

	elif [ -r /usr/local/mysql/include/mysql.h ]; then
		mysqlincdir=-I/usr/local/mysql/include

	else
		echo "can't find mysql.h"
		exit 1
	fi

	if   [ -r /usr/lib/libmysqlclient.$libext ]; then
 		mysqllibdir=
 	elif   [ -r /usr/lib/mysql/libmysqlclient.$libext ]; then
 		mysqllibdir=-L/usr/lib/mysql/
 	elif [ -r /usr/local/mysql/lib/libmysqlcient.$libext ]; then
 		mysqllibdir=-L/usr/local/mysql/lib
 	else
 		echo "can't find libmysqlcient.$libext"
 		exit 1
 	fi
   fi
fi

if [ "$capriccio" = "y" ]; then
	if [ ! $make_static = 'y' ]; then
		echo "capriccio can only be linked statically"
		exit 1
	fi

	if [ ! -r $capricciodir/src/include/pthread.h ]; then
		echo "can't find pthread.h in $capricciodir/src/include"
		exit 1
	fi
	pthreadincdir=-I$capricciodir/src/include
	
	if [ ! -r $capricciodir/src/lib/libpthread.a ]; then
		echo "can't find libpthread.a in $capricciodir/lib"
		exit 1
	fi
	pthreadlib=''
	pthreadstaticlib=$capricciodir/src/lib/libpthread.a
fi

#
# Set up the defines properly for the potentially disabled libraries
#
if [ $db_enabled = 'false' ]; then
   defs="$defs -D__DB_DISABLED__"
fi

if [ $postgres_enabled = 'false' ]; then
   defs="$defs -D__POSTGRES_DISABLED__"
fi

if [ $mysql_enabled = 'false' ]; then
   defs="$defs -D__MYSQL_DISABLED__"
fi

if [ $postgres_enabled = 'false' -a $mysql_enabled = 'false' ]; then
   defs="$defs -D__SQL_DISABLED__"
fi

#
# But make sure there's at least one valid storage option
#
if [ $db_enabled = 'false' -a \
     $mysql_enabled = 'false' -a \
     $postgres_enabled = 'false' ] ;
then
    echo "Must enable at least one storage option"
    exit 1
fi

#
# Cons together the various directories. 
#
# i.e: incdir="$tclincdir $dbincdir $postgresincdir..."
#      libdir="$tcllibdir $dblibdir $postgreslibdir..."
#
#
for what in incdir libdir lib staticlib ;  do
  cmd="$what"s=\"
  for lib in tcl db postgres mysql pthread ; do
	cmd=$cmd\$"$lib$what "
  done
  cmd=$cmd\"
  eval $cmd
done

#
# Tack on the dependency libs if we're building statically
#
if [ "$make_static" = "y" ]; then
	libs="$libs -ldl -lssl -lcrypto -lkrb5 -lcrypt -lresolv"\
	    "-lnsl -lz -lk5crypto -lcom_err"
fi

echo "Target/Tools:"
echo "  TARGET is: $target"
echo "  CC is: $cc"
echo "  CPP is: $cpp"
echo " "
echo "Options:"
echo "  TARGET is: $target"
echo "  Debug: $debug"
echo "  Optimize: $optimize"
echo "  Static: $make_static"
echo " "
echo "Directories"
echo "  exec_prefix: $exec_prefix"
echo "  bindir:  $bindir"
echo "  sbindir: $sbindir"
echo "  libdir:  $libdir"
echo "  mandir:  $mandir"
echo "  incdir:  $incdir"
echo " "
echo "Packages"
echo "  tcl: $tclincdir $tcllibdir $tcllib"
echo "  db: $dbincdir $dblibdir $dblib"
echo "  postgres: $postgresincdir $postgreslibdir $postgreslib"
echo "  mysql: $mysqlincdir $mysqllibdir $mysqllib"
if [ "$capriccio" = 'y' ]; then
echo "  capriccio: $pthreadincdir $pthreadlibdir $pthreadlib $pthreadstaticlib"
fi

rm -f Rules.make
echo "#" > Rules.make
echo "# This file was automatically generated by configure; do not edit directly" > Rules.make
sed -e "
s%@EXEC_PREFIX@%$exec_prefix%g
s%@CFLAGS@%$cflags%g
s%@BINDIR@%$bindir%g
s%@SBINDIR@%$sbindir%g
s%@LIBDIR@%$libdir%g
s%@MANDIR@%$mandir%g
s%@INCDIR@%$incdir%g
s%@TARGET@%$target%g
s%@STATIC@%$static%g
s%@ALLSTATIC@%$allstatic%g
s%@CC@%$cc%g
s%@CPP@%$cpp%g
s%@DEFS@%$defs%g
s%@DEPFLAGS@%$depflags%g
s%@DEBUG@%$debug%g
s%@OPTIMIZE@%$optimize%g
s%@OPTIMIZE_WARN@%$optimizewarn%g
s%@INCDIRS@%$incdirs%g
s%@LIBDIRS@%$libdirs%g
s%@LIBS@%$libs%g
s%@STATIC_LIBS@%$staticlibs%g

" Rules.make.in >> Rules.make
chmod oag-w Rules.make

echo ""
echo "wrote Rules.make; now run make"
