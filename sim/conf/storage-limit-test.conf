#
# Import all the test utilities
#
set base_test_dir [pwd]
while {! [file exists "$base_test_dir/sim/sim-test-utils.tcl"] } {
    set base_test_dir [file dirname $base_test_dir]
    if {$base_test_dir == "/"} {
        error "must run this script from a DTN2 subdirectory"
    }
}
source $base_test_dir/sim/sim-test-utils.tcl

sim create_node n0
sim create_node n1
sim create_node n2

n0 route local_eid dtn://n0
n1 route local_eid dtn://n1
n2 route local_eid dtn://n2

n0 link add l-n1 n1 opportunistic sim
n1 link add l-n0 n0 opportunistic sim
n1 link add l-n2 n2 opportunistic sim
n2 link add l-n1 n1 opportunistic sim

n0 route add dtn://n1/* l-n1
n0 route add dtn://n2/* l-n1
n1 route add dtn://n0/* l-n0
n1 route add dtn://n2/* l-n2
n2 route add dtn://n0/* l-n1
n2 route add dtn://n1/* l-n1

n0 registration add dtn://n0/*
n1 registration add dtn://n1/*
n2 registration add dtn://n2/*

conn set type static

# set the payload quota to be 500K so only half the bundles should get
# through 
n1 storage set payload_quota [expr 1024 * 500]

# open up the link from n0 to n1
conn up * *  bw=1Mbps latency=10ms
n0 link open l-n1

# inject 100 10K packets
sim at 10 n0 tragent n0 n2 size=[expr (10 * 1024) - 57] reps=1 batch=100\
    expiration=300

# check stats
sim at 100 dtn::check_bundle_stats n0 100 transmitted
sim at 100 dtn::check_bundle_stats n1 100 received 50 pending 50 deleted

sim at 105 n1 link open l-n2

sim at 200 dtn::check_bundle_stats n1 0 pending 50 transmitted
sim at 200 dtn::check_bundle_stats n2 50 received 50 delivered

