#
# dtn.conf
#
# Default configuration file for Internet-connected DTN nodes. The
# daemon uses a tcl interpreter to parse this file, thus any standard
# tcl commands are valid, and all settings are get/set using a single
# 'set' functions as: <module> set <var> <val?>
#

log /dtnd info "dtnd parsing configuration..."

########################################
#
# Storage Configuration
#
########################################

#
# storage set type [ berkeleydb | postgres | mysql ]
#
# Set the storage system to be used
#
storage set type berkeleydb

#
# storage set payloaddir <dir>
#
# Set the directory to be used for bundle payload files
#
storage set payloaddir /var/dtn/bundles

#
# storage set dbname <db>
#
# Set the database name (appended with .db as the filename in berkeley
# db, used as-is for SQL variants
#
storage set dbname     DTN

#
# storage set dbdir    <dir>
# storage set dberrlog <file>
#
#
# When using berkeley db, set the directory to be used for the
# database files and the name of the files and error log.
#
storage set dbdir      /var/dtn/db
storage set dberrlog   DTN.errlog

########################################
#
# Routing configuration
#
########################################

#
# Set the algorithm used for dtn routing.
#
# route set type [static | flood]
#
route set type static

#
# Set the list of regions that this router is "in".
#
# route local_region <region>
#
route local_region "internet"

#
# route local_tuple  <tuple>
#
# Set the administrative tuple of this node.
#
route local_tuple  "bundles://internet/host://[info hostname]"

########################################
#
# TCP convergence layer configuration
#
########################################

#
# interface add [tcp|udp] host://<addr>:<port>/
#
# Add an input interface to listen on addr:port for incoming bundles
# from other tcp / udp convergence layers
#
interface add tcp host://0.0.0.0:5000/
interface add udp host://0.0.0.0:6000/

#
# link add <name> host://<addr>:<port>/ <type> [tcp|udp] <args...>
#
# Add a link to a peer node using the tcp or udp convergence layer.
#
# e.g. link add tcp0 host://host.domain:port ONDEMAND tcp

#
# route add <dest> <link|peer>
#
# Add a route to the given bundle tuple pattern <dest> using the
# specified link name or peer url
#
# e.g. route add bundles://some.region/host://host.domain/* tcp0

########################################
#
# Parameter Tuning
#
########################################

#
# Set the size threshold for the daemon so any bundles smaller than this
# size maintain a shadow copy in memory to minimize disk accesses. 
#
# param set payload_mem_threshold 16384

#
# Test option to keep all bundle files in the filesystem, even after the
# bundle is no longer present at the daemon.
#
# param set payload_test_no_remove true

#
# Set the size for which the tcp convergence layer sends partial reception
# acknowledgements. Used with reactive fragmentation
#
# param set tcpcl_partial_ack_len 4096


# (others exist but are not fully represented here)

log /dtnd info "dtnd configuration parsing complete"

## emacs settings to use tcl-mode by default
## Local Variables: ***
## mode:tcl ***
## End: ***
