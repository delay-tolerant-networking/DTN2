
log /daemon INFO "bundle daemon config being parsed..."

global no_tclreadline

#
# Default routing configuration
#
route local_region "internet"
route local_tuple  "bundles://internet/host://[info hostname]"

set id [test set id]
set tidy    [storage set tidy]

set port 5000
set sqldb "dtn"
set dbdir "/tmp/bundledb"
set payloaddir  "/tmp/bundles"
set localhost "localhost"
set peer "localhost"
set localdir  "/tmp/incoming-bundles"

route set type "static"

if {$id != 0} {
    storage set sqldb "dtn$id"
    set dbdir  /tmp/bundledb-$id
    set payloaddir /tmp/bundles-$id
    set localhost 10.0.0.$id
    set localdir  /tmp/incoming-bundles-$id

    route local_tuple "bundles://internet/host://$localhost"

    api set local_addr $localhost
    
    if {$id == 1} {
	set peer    10.0.0.2
	set peerdir /tmp/incoming-bundles-2
	
    } elseif {$id == 2} {
	set peer    10.0.0.1
	set peerdir /tmp/incoming-bundles-1

    } else {
	error "invalid id value $id"
    }

    foreach dir [list $dbdir $payloaddir $localdir $peerdir] {
	if {! [file exists $dir]} {
	    file mkdir $dir
	}
    }
}

# initialize storage
storage set type berkeleydb
storage set sqldb $sqldb
storage set dbdir $dbdir
storage set payload_dir $payloaddir

# set the payload directory and other params
param set tcpcl_ack_blocksz 4096
#param set payload_mem_threshold 0

param set proactive_frag_threshold 495

# param set payload_test_no_remove true
param set tcpcl_test_fragment_size 500

# set a local tcp interface
interface add tcp bundles://internet/host://$localhost:$port/

# and a file one
set file_local_tuple file://unix/file://$localdir/
# interface $file_local_tuple

#
# set up routing...
#

# XXX/demmer add a "route router foo" hook
# XXX/demmer this could also append a trial-mode algorithm

if {$id != 0} {
    set tcp_peer_tuple bundles://internet/tcp://$peer:$port/
    
    # with a tcp route
    link  add  link-$id $tcp_peer_tuple ONDEMAND tcp
    route add  bundles://internet/host://$peer link-$id
    route add  bundles://internet/host://$peer/* link-$id
    
    # and/or a file route 
    #     route add bundles://internet/bundles://$peer/* \
    #	      bundles://internet/file://$peerdir/ ONDEMAND
}

# set up the test smtp daemon
set testsmtpd 0
if {$testsmtpd} {
    smtpd_start 2500
}

#
# Use the initscript hook to store some code we want run only _after_
# everything else is initialized
#
test set initscript {
    #
    # pull in the test utilities
    #
    if [catch {
	source "test/dtn-test.tcl"
    } err] {
	log /daemon ERR "error sourcing test utilities"
    }
    
    registration add logger bundles://*/*

    proc test_bundle_arrived {regid bundle_info} {
	foreach {source dest payload length} $bundle_info {}
	puts "bundle arrival"
	puts "source:  $source"
	puts "dest:    $dest"
	puts "length:  $length"
	puts "payload: [string range $payload 0 64]"
    }

#    tcl_registration bundles://*/* test_bundle_arrived

#     registration add rate bundles://*/* 5000

    file_injector_start $localdir bundles://internet/bundles://$localhost/ \
	    bundles://internet/bundles://$peer/demux
    
    if {$id == 2} {
#	sendbundle
    }

#     if {$testsmtpd} {
# 	puts "sending test mail..."
# 	send_test_mail
#     }
}
