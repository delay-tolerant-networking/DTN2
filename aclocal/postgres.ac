dnl
dnl Autoconf support for finding postgres
dnl

dnl
dnl Main macro for finding a usable postgres installation 
dnl
AC_DEFUN(AC_DTN_CONFIG_POSTGRES, [
    ac_postgresdir='no'

    AC_ARG_WITH(postgres,
        AC_HELP_STRING([--with-postgres=DIR],
    		   [location of a postgres installation (default none)]),
        ac_postgresdir=$withval) 

    dnl
    dnl First make sure we even want it
    dnl
    if test x$ac_postgresdir = xno ; then
    POSTGRES_ENABLED=0
    else
    POSTGRES_ENABLED=1

    dnl
    dnl Now check if we have a cached value, and if not, find it.
    dnl
    if test ! x$dtn_cv_path_postgres_h = x ; then
        echo "checking for postgres installation... (cached) $dtn_cv_path_postgres_h/libpq-fe.h, $dtn_cv_path_postgres_lib -lpq"
    else
        AC_DTN_FIND_POSTGRES
    fi

    if test ! $dtn_cv_path_postgres_h = /usr/include ; then
        DTN_CPPFLAGS="$DTN_CPPFLAGS -I$dtn_cv_path_postgres_h"
    fi

    if test ! $dtn_cv_path_postgres_lib = /usr/lib ; then
        DTN_LDFLAGS="$DTN_LDFLAGS -L$dtn_cv_path_postgres_lib"
    fi

    DTN_LIBS="$DTN_LIBS -lpq"
    
    fi # POSTGRES_ENABLED

    AC_SUBST(POSTGRES_ENABLED)
])

dnl
dnl Find postgres
dnl
AC_DEFUN(AC_DTN_FIND_POSTGRES, [
    dtn_cv_path_postgres_h=
    dtn_cv_path_postgres_lib=

    ac_save_CPPFLAGS="$CPPFLAGS"
    ac_save_LDFLAGS="$LDFLAGS"
    ac_save_LIBS="$LIBS"

    if test ! x"$ac_postgresdir" = x"yes" ; then
        ac_postgresincdirs=$ac_postgresdir/include
    else
        ac_postgresincdirs="/usr/include /usr/include/postgresql /usr/local/pgsql/include"
    fi

    if test ! x"$ac_postgresdir" = x"yes" ; then
        ac_postgreslibdirs="$ac_postgresdir/lib"
    else
        ac_postgreslibdirs="/usr/lib /usr/lib/pgsql /usr/local/pgsql/lib"
    fi

    for ac_postgresincdir in $ac_postgresincdirs; do

	CPPFLAGS="$ac_save_CPPFLAGS -I$ac_postgresincdir"
	LDFLAGS="$ac_save_LDFLAGS"
	LIBS="$ac_save_LIBS"

	dnl
	dnl First check the version in the header file. If there's a match, 
	dnl fall through to the other check to make sure it links.
	dnl If not, then we can break out of the two inner loops.
	dnl
        AC_MSG_CHECKING([for postgres header libpq-fe.h in $ac_postgresincdir])
	AC_LINK_IFELSE(
	  AC_LANG_PROGRAM(
	    [
                #include <libpq-fe.h>
            ],
            
            [
            ]),
          [ 
	      AC_MSG_RESULT([yes])
              dtn_cv_path_postgres_h=$ac_postgresincdir
	      break
          ],
          [
              AC_MSG_RESULT([no])
	      continue
          ])
    done

    if test x$dtn_cv_path_postgres_h = x ; then
        AC_MSG_ERROR([can't find usable postgres installation])
    fi

    for ac_postgreslibdir in $ac_postgreslibdirs; do

	LDFLAGS="$ac_save_LDFLAGS -L$ac_postgreslibdir"
	LIBS="$ac_save_LIBS -lpq"

        AC_MSG_CHECKING([for postgres library libpq in $ac_postgreslibdir])
	AC_LINK_IFELSE(
	  AC_LANG_PROGRAM(
	    [
                #include <libpq-fe.h>
            ],
            
            [
	        PGconn *conn = PQconnectStart("");
            ]),

          [
              AC_MSG_RESULT([yes])
              dtn_cv_path_postgres_lib=$ac_postgreslibdir
              break
          ],
          [
              AC_MSG_RESULT([no])
          ])
    done

    CPPFLAGS="$ac_save_CPPFLAGS"
    LDFLAGS="$ac_save_LDFLAGS"
    LIBS="$ac_save_LIBS"

    if test x$dtn_cv_path_postgres_lib = x ; then
        AC_MSG_ERROR([can't find usable postgres library])
    fi
])
