#
# configure.ac -- input file for configure script
#
# run preconfig.sh when any changes are made
#

AC_PREREQ(2.57)
AC_INIT(DTN2)
AC_CONFIG_SRCDIR([version.h])
# AC_CONFIG_HEADER([auto.config.h])
AC_CONFIG_AUX_DIR(tools)

# Stick a comment in the generated file so people know what to do.
AC_REVISION(-- DO NOT EDIT THIS FILE!  See the instructions in configure.in --)

# This is handy to re-run configure but use any options you used before.
AC_ARG_WITH(previous-options,
[  --with-previous-options      read config.status for configure options], [
if test -r ./config.status &&
   args=`sed -n '7s/^# [^ ]* //p' config.status`
then
    set -x
    exec $0 $args
fi
])

# First set srcdir
ac_prog=$0
ac_confdir=`echo "$ac_prog" | sed 's%[\\/][^\\/][^\\/]*$%%'`
test "x$ac_confdir" = "x$ac_prog" && ac_confdir=.
SRCDIR=$ac_confdir
AC_SUBST(SRCDIR)

dnl -------------------------------------------------------------------------
dnl Basic user-configurable options
dnl -------------------------------------------------------------------------

dnl
dnl Handle --with-target=target
dnl
TARGET=native
AC_ARG_WITH(target,
	AC_HELP_STRING([--with-target=TARGET],[use target TARGET (default native)]),
	[TARGET=$withval])

AC_MSG_CHECKING([compilation target])
AC_MSG_RESULT($TARGET)
AC_SUBST(TARGET)

dnl
dnl Handle --enable-debug[=yes|no]
dnl 	   --disable-debug
dnl
AC_ARG_ENABLE(debug,
	AC_HELP_STRING([--disable-debug],[compile with debugging turned off]),
	[debug=$enableval],
	[debug=yes])

AC_MSG_CHECKING([whether to compile with debugging])
AC_MSG_RESULT($debug)

DEBUG=
if test $debug = yes ; then 
   DEBUG="-g -fno-inline"
fi
AC_SUBST(DEBUG)
	
dnl
dnl Handle --enable-debug-memory[=yes|no]
dnl 	   --disable-debug-memory
dnl
AC_ARG_ENABLE(debug_memory,
	AC_HELP_STRING([--enable-debug-memory],[enable memory debugging]),
	[debug_memory=$enableval],
	[debug_memory=no])

AC_MSG_CHECKING([whether to compile with memory debugging])
AC_MSG_RESULT($debug_memory)

if test $debug_memory = yes ; then
AC_DEFINE_UNQUOTED(OASYS_DEBUG_MEMORY_ENABLED, 1,
                  [whether oasys memory debugging is enabled])
fi

dnl
dnl Handle --enable-optimize[=yes|no]
dnl 	   --disable-optimize
dnl
optimize=yes
AC_ARG_ENABLE(optimize,
	AC_HELP_STRING([--disable-optimize],[compile with optimization turned off]),
	[optimize=$enableval],
	[optimize=no])

AC_MSG_CHECKING([whether to compile with optimization])
AC_MSG_RESULT($optimize)

OPTIMIZE=
OPTIMIZE_WARN=
if test $optimize = yes ; then
   OPTIMIZE=-O2
   OPTIMIZE_WARN=-Wuninitialized
fi
AC_SUBST(OPTIMIZE)
AC_SUBST(OPTIMIZE_WARN)

dnl
dnl Handle --enable-static[=yes|no]
dnl 	   --disable-static
dnl
AC_ARG_ENABLE(static,
	AC_HELP_STRING([--enable-static],[build and link statically (XXX broken)]),
	[$static=$enableval],
	[static=yes])

AC_MSG_CHECKING([whether to build and link statically])
AC_MSG_RESULT($static)

STATIC=
test $static = yes && STATIC=yes
AC_SUBST(STATIC)

dnl
dnl Handle --with-cc=CC
dnl
ac_with_cc=$CC
AC_ARG_WITH(cc,
    AC_HELP_STRING([--with-cc=CC],
		   [name (or path) of the C compiler to use]),
                   ac_with_cc=$withval)

if test x$ac_with_cc = x ; then
    ac_try_cc="gcc gcc-3.3 gcc-3.2 gcc-2.96 gcc296 gcc-2.95 gcc295"
    ac_try_cxx="g++ g++-3.3 g++-3.2 g++-2.96 g++296 g++-2.95 g++295"
else
    CC=$ac_with_cc
    ac_try_cc=$ac_with_cc
    ac_try_cxx=`echo $ac_with_cc | sed 's/cc/++/'`
fi

dnl -------------------------------------------------------------------------
dnl Checks for programs and libraries
dnl -------------------------------------------------------------------------
AC_MSG_CHECKING([for a C compiler (trying $ac_try_cc)])
AC_MSG_RESULT([])
AC_PROG_CC($ac_try_cc)
AC_MSG_CHECKING([for a C++ compiler (trying $ac_try_cxx)])
AC_MSG_RESULT([])
AC_PROG_CXX($ac_try_cxx)
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_OASYS_CONFIG_GCC
AC_SEARCH_LIBS(pthread_create, pthread)
AC_CHECK_FUNC(pthread_yield, [], [AC_SEARCH_LIBS(sched_yield, rt)])
AC_SEARCH_LIBS(socket, socket)
AC_SEARCH_LIBS(gethostbyname, nsl)
AC_SEARCH_LIBS(xdr_int, rpc)
AC_OASYS_CONFIG_TCL
AC_OASYS_CONFIG_DB
AC_DTN_CONFIG_POSTGRES
AC_DTN_CONFIG_MYSQL

#
# Make sure there's at least one valid storage option
#
if test ! $DB_ENABLED = 1 -a \
        ! $MYSQL_ENABLED = 1 -a \
        ! $POSTGRES_ENABLED = 1  ;
then
    AC_MSG_ERROR([Must enable at least one storage option (db, postgres, mysql)])
fi

#
# Figure out if at least one sql option is enabled.
#
if test $MYSQL_ENABLED = 1 -o $POSTGRES_ENABLED = 1 ; then
    SQL_ENABLED=1
else
    SQL_ENABLED=0
fi

AC_SUBST(SQL_ENABLED)

dnl -------------------------------------------------------------------------
dnl Checks for header files.
dnl -------------------------------------------------------------------------
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h err.h fcntl.h float.h limits.h locale.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h synch.h sys/cdefs.h sys/ioctl.h sys/socket.h sys/time.h unistd.h wchar.h])

dnl -------------------------------------------------------------------------
dnl Checks for typedefs, structures, and compiler characteristics.
dnl -------------------------------------------------------------------------
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_C_VOLATILE
AC_CHECK_TYPES([ptrdiff_t])
AC_CHECK_TYPES([uint32_t])
AC_CHECK_TYPES([u_int32_t])

dnl -------------------------------------------------------------------------
dnl Checks for library functions.
dnl -------------------------------------------------------------------------
if test "$cross_compiling" = yes; then
    AC_MSG_NOTICE([assuming GNU libc compatible malloc and realloc for cross-compilation])
    ac_cv_func_malloc_0_nonnull=yes
    ac_cv_func_realloc_0_nonnull=yes
fi
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRTOD
AC_FUNC_VPRINTF
AC_OASYS_FUNC_FPCLASSIFY
AC_CHECK_FUNCS([bzero ftruncate getaddrinfo gethostbyname gethostbyname_r getopt_long gettimeofday inet_aton inet_pton isascii localeconv memchr memmove memset pthread_yield sched_yield mkdir setenv socket strcasecmp strncasecmp strchr strcspn strdup strerror strrchr strspn strstr strtol strtoul])

dnl -------------------------------------------------------------------------
dnl Output
dnl -------------------------------------------------------------------------

dnl
dnl We defer setting the various CFLAGS to avoid interfering with the 
dnl basic system tests.
dnl
CPPFLAGS="$CPPFLAGS $OASYS_CPPFLAGS $DTN_CPPFLAGS"
LDFLAGS="$LDFLAGS $OASYS_LDFLAGS $DTN_LDFLAGS"
LIBS="$LIBS $OASYS_LIBS $DTN_LIBS"

AC_CONFIG_FILES(Rules.make config.h)
AC_CONFIG_HEADER([auto.config.h:auto.config.h.in])

dnl
dnl Always reconfigure oasys as well
dnl
AC_CONFIG_SUBDIRS(oasys)

AC_OUTPUT

chmod oug-w Rules.make config.h auto.config.h oasys/Rules.make oasys/config.h

echo "DTN2 configure state:"
echo "Target/Tools:"
echo "  TARGET is: $TARGET"
echo "  CC is: $CC (version $oasys_cv_prog_gccver)"
echo "  CXX is: $CXX"
echo " "
echo "Options:"
echo "  Debug: $DEBUG"
echo "  Optimize: $OPTIMIZE"
echo "  Static: $STATIC"
echo " "
echo "External packages:"
echo "  tcl: $oasys_cv_path_tcl_h/tcl.h -L$oasys_cv_path_tcl_lib -l$oasys_cv_lib_tcl"
if test $DB_ENABLED = 1 ; then
  echo "  db: $dtn_cv_path_db_h/db.h -L$dtn_cv_path_db_lib -l$dtn_cv_lib_db"
fi
if test $POSTGRES_ENABLED = 1 ; then
  echo "  postgres: $dtn_cv_path_postgres_h/libpq-fe.h -L $dtn_cv_path_postgres_lib -lpq"
fi

if test $MYSQL_ENABLED = 1 ; then 
  echo "  mysql: $dtn_cv_path_mysql_h/libpq-fe.h -L $dtn_cv_path_mysql_lib -lmysqlclient"
fi
